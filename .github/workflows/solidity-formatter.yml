name: Solidity Auto-Formatter

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [master, main]

jobs:
  check-sol-changes:
    runs-on: ubuntu-latest
    outputs:
      sol-changed: ${{ steps.changes.outputs.sol-changed }}
      changed-files: ${{ steps.changes.outputs.changed-files }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for Solidity file changes
        id: changes
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.sha }}"
          fi
          
          echo "Checking for .sol file changes between $BASE_SHA and $HEAD_SHA"
          
          CHANGED_SOL_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | grep -E '\.sol$' || true)
          
          if [ -n "$CHANGED_SOL_FILES" ]; then
            echo "Solidity files changed:"
            echo "$CHANGED_SOL_FILES"
            echo "sol-changed=true" >> $GITHUB_OUTPUT
            # Convert to space-separated list for easier processing
            echo "changed-files=$(echo "$CHANGED_SOL_FILES" | tr '\n' ' ')" >> $GITHUB_OUTPUT
          else
            echo "No Solidity files changed"
            echo "sol-changed=false" >> $GITHUB_OUTPUT
            echo "changed-files=" >> $GITHUB_OUTPUT
          fi

  format-solidity:
    needs: check-sol-changes
    if: needs.check-sol-changes.outputs.sol-changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          # Install dependencies from package.json if it exists
          if [ -f package.json ]; then
            echo "Installing from package.json..."
            npm ci || npm install
          fi
          
          # Install Prettier and Solidity plugin globally and locally
          echo "Installing Prettier and prettier-plugin-solidity..."
          npm install --global prettier@^3.0.0 prettier-plugin-solidity@^1.1.0
          npm install prettier@^3.0.0 prettier-plugin-solidity@^1.1.0
          
          # Verify installation
          echo "Verifying installation..."
          npm list prettier prettier-plugin-solidity || true
          npx prettier --version

      - name: Check current formatting
        id: check-format
        run: |
          echo "Checking formatting for changed files..."
          CHANGED_FILES="${{ needs.check-sol-changes.outputs.changed-files }}"
          
          # Check if files need formatting
          NEEDS_FORMAT=false
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              echo "Checking formatting for: $file"
              if ! npx prettier --check "$file" > /dev/null 2>&1; then
                echo "File needs formatting: $file"
                NEEDS_FORMAT=true
              else
                echo "File is already formatted: $file"
              fi
            fi
          done
          
          echo "needs-format=$NEEDS_FORMAT" >> $GITHUB_OUTPUT

      - name: Format Solidity files
        if: steps.check-format.outputs.needs-format == 'true'
        run: |
          echo "Formatting changed Solidity files using existing .prettierrc config..."
          CHANGED_FILES="${{ needs.check-sol-changes.outputs.changed-files }}"
          
          # Verify prettier config exists
          if [ ! -f .prettierrc ]; then
            echo "Warning: .prettierrc not found, using default Solidity formatting"
          else
            echo "Using existing .prettierrc configuration"
            cat .prettierrc
          fi
          
          # Format each changed file
          for file in $CHANGED_FILES; do
            if [ -f "$file" ]; then
              echo "Formatting: $file"
              npx prettier --write "$file"
              if [ $? -eq 0 ]; then
                echo "Successfully formatted: $file"
              else
                echo "Error formatting: $file"
                exit 1
              fi
            fi
          done

      - name: Check if files were modified
        id: verify-changes
        if: steps.check-format.outputs.needs-format == 'true'
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "Files were formatted"
            echo "files-changed=true" >> $GITHUB_OUTPUT
          else
            echo "No formatting changes needed"
            echo "files-changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit formatting changes
        if: steps.verify-changes.outputs.files-changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add .
          git commit -m "auto-format: prettier formatting for Solidity files

          ü§ñ Generated with [Claude Code](https://claude.ai/code)
          
          Co-Authored-By: Claude <noreply@anthropic.com>"

      - name: Push changes
        if: steps.verify-changes.outputs.files-changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref || github.ref_name }}

      - name: Comment on PR about formatting
        if: github.event_name == 'pull_request' && steps.verify-changes.outputs.files-changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ‚ú® Auto-Formatting Applied

            I've automatically formatted the Solidity files in this PR using Prettier to maintain consistent code style.

            **Files formatted:**
            \`\`\`
            ${{ needs.check-sol-changes.outputs.changed-files }}
            \`\`\`

            The formatting follows the project's style guidelines:
            - 4 spaces for indentation
            - 120 character line width
            - Consistent spacing and bracket placement

            No manual action needed - the changes have been committed automatically! üöÄ`
            });

  verify-build-after-format:
    needs: [check-sol-changes, format-solidity]
    if: needs.check-sol-changes.outputs.sol-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (after formatting)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: |
          forge install

      - name: Verify contracts still compile
        run: |
          forge clean
          forge build

      - name: Comment on build status
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## ‚ö†Ô∏è Build Failed After Formatting

            The automatic formatting may have introduced compilation issues. Please review the changes and fix any syntax errors.

            Run \`forge build\` locally to identify and resolve the issues.`
            });